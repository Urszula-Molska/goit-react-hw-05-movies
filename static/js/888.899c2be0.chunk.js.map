{"version":3,"file":"static/js/888.899c2be0.chunk.js","mappings":"2UACIA,EAAS,mCAEAC,EAAa,mCAAG,6FACrBC,EADqB,kEAC4CF,EAD5C,6BAGFG,EAAAA,EAAAA,IAAA,UAAaD,IAHX,cAGnBE,EAHmB,yBAIlBA,EAASC,MAJS,gCAMzBC,QAAQC,MAAR,MANyB,yDAAH,qDAUbC,EAAY,mCAAG,WAAMC,GAAN,gFACpBP,EADoB,6CACwBO,EADxB,oBAC2CT,EAD3C,6BAGDG,EAAAA,EAAAA,IAAA,UAAaD,IAHZ,cAGlBE,EAHkB,yBAIjBA,EAASC,MAJQ,gCAMxBC,QAAQC,MAAR,MANwB,yDAAH,sDAUZG,EAAS,mCAAG,WAAMD,GAAN,gFACjBP,EADiB,6CAC2BO,EAD3B,4BACsDT,EADtD,6BAGEG,EAAAA,EAAAA,IAAA,UAAaD,IAHf,cAGfE,EAHe,yBAIdA,EAASC,MAJK,gCAMrBC,QAAQC,MAAR,MANqB,yDAAH,sDAUTI,EAAY,mCAAG,WAAMF,GAAN,gFACpBP,EADoB,6CACwBO,EADxB,4BACmDT,EADnD,6BAGDG,EAAAA,EAAAA,IAAA,UAAaD,IAHZ,cAGlBE,EAHkB,yBAIjBA,EAASC,KAAKO,SAJG,gCAMxBN,QAAQC,MAAR,MANwB,yDAAH,sDAUZM,EAAW,mCAAG,WAAMC,GAAN,gFACnBZ,EADmB,4DACwCF,EADxC,kBACwDc,GADxD,kBAGAX,EAAAA,EAAAA,IAAA,UAAaD,IAHb,cAGjBE,EAHiB,yBAIhBA,EAASC,KAAKO,SAJE,gCAMvBN,QAAQC,MAAR,MANuB,yDAAH,qD,uKC1CxB,EAAwB,4B,iBCKXQ,EAAe,WAAO,IAAD,QAChC,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8CF,EAAAA,EAAAA,UAAS,IAAvD,eAAOG,EAAP,KAAwBC,EAAxB,KACQX,GAAYY,EAAAA,EAAAA,MAAZZ,QAEFa,GAAWC,EAAAA,EAAAA,MAEXC,EADO,IAAIC,KAAKR,EAAMS,cACHC,cACnBC,EAAK,0CAAsCX,EAAMY,aACjDC,EAAgB,oBAAGR,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAC3CC,EAAkB,oBAAGX,EAASS,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7CE,EAAY,mCAAG,WAAMzB,GAAN,4FACCD,EAAAA,EAAAA,IAAaC,GADd,OACbQ,EADa,OAEbkB,EAAalB,EAAMmB,OACnBA,EAASD,EAAWE,KAAI,SAAAC,GAAM,OAAIA,EAAOC,IAAX,IAAiBC,KAAK,MAC1DtB,EAASD,GACTG,EAAmBgB,GALA,2CAAH,sDAYlB,OAJAK,EAAAA,EAAAA,YAAU,WACRP,EAAazB,EACd,GAAE,CAACA,KAGF,+BACE,6BACE,2BACE,yBACE,SAAC,KAAD,CAAMiC,GAAIZ,EAAV,0BAEF,yBACE,SAAC,KAAD,CAAMY,GAAIT,EAAV,+BAGJ,0BACG,IACAhB,EAAM0B,MAFT,KAEkBnB,EAFlB,QAIA,2CAAmBP,EAAM2B,aAAzB,QACA,gBAAKC,UAAWC,EAAWC,IAAKnB,EAAOoB,IAAK/B,EAAM0B,SAClD,wCACA,uBAAI1B,EAAMgC,YACV,oCACA,yBAAI9B,EAAJ,QACA,mBACA,qDACA,2BACE,yBACE,SAAC,KAAD,CAAMuB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAQ,SAAD,CAAUC,UAAU,gDAApB,UACE,SAAC,KAAD,UAKT,EAKD,G","sources":["components/Api/Api.js","webpack://urszula-molska-goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nlet ApiKey = '209b988e1e5a3c54f84bfbe290fdf3e2';\n\nexport const fetchTrending = async () => {\n  const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&query=${query}`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"MovieDetails_image__tPD8f\"};","import { Suspense, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport css from './MovieDetails.module.css';\nimport { fetchDetails } from '../Api/Api.js';\n\nexport const MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [movieCategories, setMovieCategories] = useState('');\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const date = new Date(movie.release_date);\n  const releaseDate = date.getFullYear();\n  const image = `https://image.tmdb.org/t/p/w500/${movie.poster_path}`;\n  const backLinkHrefHome = location.state?.from ?? '/';\n  const backLinkHrefMovies = location.state?.from ?? '/movies';\n\n  const getMovieById = async movieId => {\n    const movie = await fetchDetails(movieId);\n    const categories = movie.genres;\n    const genres = categories.map(object => object.name).join(', ');\n    setMovie(movie);\n    setMovieCategories(genres);\n  };\n\n  useEffect(() => {\n    getMovieById(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <main>\n        <ul>\n          <li>\n            <Link to={backLinkHrefHome}>Back Home</Link>\n          </li>\n          <li>\n            <Link to={backLinkHrefMovies}>Back Movies</Link>\n          </li>\n        </ul>\n        <h2>\n          {' '}\n          {movie.title} ({releaseDate})\n        </h2>\n        <h3>Vote average: {movie.vote_average} </h3>\n        <img className={css.image} src={image} alt={movie.title} />\n        <h3>Overview: </h3>\n        <p>{movie.overview}</p>\n        <h3>Genres</h3>\n        <p>{movieCategories} </p>\n        <hr />\n        <h3> Additional Information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </main>\n    </>\n  );\n};\nMovieDetails.propTypes = {\n  movie: PropTypes.object,\n  movieCategories: PropTypes.string,\n};\nexport default MovieDetails;\n"],"names":["ApiKey","fetchTrending","URL","axios","response","data","console","error","fetchDetails","movieId","fetchCast","fetchReviews","results","fetchSearch","query","MovieDetails","useState","movie","setMovie","movieCategories","setMovieCategories","useParams","location","useLocation","releaseDate","Date","release_date","getFullYear","image","poster_path","backLinkHrefHome","state","from","backLinkHrefMovies","getMovieById","categories","genres","map","object","name","join","useEffect","to","title","vote_average","className","css","src","alt","overview","Suspense","fallback"],"sourceRoot":""}