{"version":3,"file":"static/js/247.15a86edc.chunk.js","mappings":"2UACIA,EAAS,mCAEAC,EAAa,mCAAG,6FACrBC,EADqB,kEAC4CF,EAD5C,6BAGFG,EAAAA,EAAAA,IAAA,UAAaD,IAHX,cAGnBE,EAHmB,yBAIlBA,EAASC,MAJS,gCAMzBC,QAAQC,MAAR,MANyB,yDAAH,qDAUbC,EAAY,mCAAG,WAAMC,GAAN,gFACpBP,EADoB,6CACwBO,EADxB,oBAC2CT,EAD3C,6BAGDG,EAAAA,EAAAA,IAAA,UAAaD,IAHZ,cAGlBE,EAHkB,yBAIjBA,EAASC,MAJQ,gCAMxBC,QAAQC,MAAR,MANwB,yDAAH,sDAUZG,EAAS,mCAAG,WAAMD,GAAN,gFACjBP,EADiB,6CAC2BO,EAD3B,4BACsDT,EADtD,6BAGEG,EAAAA,EAAAA,IAAA,UAAaD,IAHf,cAGfE,EAHe,yBAIdA,EAASC,MAJK,gCAMrBC,QAAQC,MAAR,MANqB,yDAAH,sDAUTI,EAAY,mCAAG,WAAMF,GAAN,gFACpBP,EADoB,6CACwBO,EADxB,4BACmDT,EADnD,6BAGDG,EAAAA,EAAAA,IAAA,UAAaD,IAHZ,cAGlBE,EAHkB,yBAIjBA,EAASC,KAAKO,SAJG,gCAMxBN,QAAQC,MAAR,MANwB,yDAAH,sDAUZM,EAAW,mCAAG,WAAMC,GAAN,gFACnBZ,EADmB,4DACwCF,EADxC,kBACwDc,GADxD,kBAGAX,EAAAA,EAAAA,IAAA,UAAaD,IAHb,cAGjBE,EAHiB,yBAIhBA,EAASC,KAAKO,SAJE,gCAMvBN,QAAQC,MAAR,MANuB,yDAAH,qD,2ICtCXQ,EAAO,WAClB,IAAQN,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAkCQ,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,qGACUX,EAAAA,EAAAA,GAAUD,GADpB,OACRS,EADQ,OAEdC,EAAaD,EAAUI,MAFT,2CAAH,qDAIbD,EAAQZ,EACT,GAAE,CAACA,KAGF,iCACE,kCACA,wBACGS,EAAUK,KAAI,SAAAD,GAAI,OACjB,gBAAkBE,MAAO,CAAEC,UAAW,QAAtC,WACE,gBACED,MAAO,CAAEE,MAAO,SAChBC,IAAG,0CAAqCL,EAAKM,cAC7CC,IAAG,UAAKP,EAAKQ,KAAV,kBAEL,uBAAIR,EAAKQ,QACT,uCAAeR,EAAKS,eAPbT,EAAKU,GADG,QAc1B,EAKD,W","sources":["components/Api/Api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nlet ApiKey = '209b988e1e5a3c54f84bfbe290fdf3e2';\n\nexport const fetchTrending = async () => {\n  const URL = `https://api.themoviedb.org/3/trending/movie/day?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchDetails = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchCast = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchReviews = async movieId => {\n  const URL = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${ApiKey}&page=1`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchSearch = async query => {\n  const URL = `https://api.themoviedb.org/3/search/movie?api_key=${ApiKey}&query=${query}`;\n  try {\n    const response = await axios.get(`${URL}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchCast } from '../Api/Api.js';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState([]);\n\n  useEffect(() => {\n    const getCast = async () => {\n      const movieCast = await fetchCast(movieId);\n      setMovieCast(movieCast.cast);\n    };\n    getCast(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Cast</h2>\n      <ul>\n        {movieCast.map(cast => (\n          <li key={cast.id} style={{ listStyle: 'none' }}>\n            <img\n              style={{ width: '200px' }}\n              src={`https://image.tmdb.org/t/p/w500/${cast.profile_path}`}\n              alt={`${cast.name}'s portrait`}\n            />\n            <p>{cast.name}</p>\n            <p>character: {cast.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nCast.propTypes = {\n  movieCast: PropTypes.arrayOf(PropTypes.objectOf),\n};\nexport default Cast;\n"],"names":["ApiKey","fetchTrending","URL","axios","response","data","console","error","fetchDetails","movieId","fetchCast","fetchReviews","results","fetchSearch","query","Cast","useParams","useState","movieCast","setMovieCast","useEffect","getCast","cast","map","style","listStyle","width","src","profile_path","alt","name","character","id"],"sourceRoot":""}