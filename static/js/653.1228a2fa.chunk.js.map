{"version":3,"file":"static/js/653.1228a2fa.chunk.js","mappings":"yPACA,EAA4B,0BAA5B,EAAmE,2BAAnE,EAAiH,iCAAjH,EAAoK,gC,SCGvJA,EAAS,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,aAAcC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACjE,OACE,6BACE,gBAAKC,UAAWC,EAAhB,UACE,kBAAMC,SAAUN,EAAcI,UAAWC,EAAzC,WACE,kBACED,UAAWC,EACXE,KAAK,OACLC,KAAK,cACLC,aAAa,MACbC,YAAY,mBAEd,mBAAQN,UAAWC,EAAsBE,KAAK,SAA9C,yBAKHJ,EAAMQ,OAAS,IACd,gBAAKP,UAAU,iBAAf,SAC2B,IAAxBH,EAAaU,QACZ,yDAAiCR,MAEjC,iCACE,oCAAYA,MACZ,wBACGF,EAAaW,KAAI,SAAAC,GAAK,OACrB,eAEEC,QAAS,WACPZ,EAAaW,EAAME,GACpB,EAJH,UAME,SAAC,KAAD,CAAMC,GAAE,WAAMH,EAAME,IAApB,SAA2BF,EAAMI,SAL5BJ,EAAME,GAFQ,aAiBtC,EAQD,G","sources":["webpack://urszula-molska-goit-react-hw-05-movies/./src/components/Movies/Movies.module.css?9f30","components/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchbar\":\"Movies_searchbar__uTZk4\",\"searchForm\":\"Movies_searchForm__S-9T7\",\"searchFormButton\":\"Movies_searchFormButton__uM4SF\",\"searchFormInput\":\"Movies_searchFormInput__LtaNq\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './Movies.module.css';\n\nexport const Movies = ({ handleSubmit, moviesByTerm, getMovieById, query }) => {\n  return (\n    <main>\n      <div className={css.searchbar}>\n        <form onSubmit={handleSubmit} className={css.searchForm}>\n          <input\n            className={css.searchFormInput}\n            type=\"text\"\n            name=\"searchQuery\"\n            autoComplete=\"off\"\n            placeholder=\"Search movies\"\n          />\n          <button className={css.searchFormButton} type=\"submit\">\n            Search\n          </button>\n        </form>\n      </div>\n      {query.length > 0 && (\n        <div className=\"TitlesBySearch\">\n          {moviesByTerm.length === 0 ? (\n            <p>There is no match for query: {query}</p>\n          ) : (\n            <>\n              <h2>Query: {query}</h2>\n              <ul>\n                {moviesByTerm.map(movie => (\n                  <li\n                    key={movie.id}\n                    onClick={() => {\n                      getMovieById(movie.id);\n                    }}\n                  >\n                    <Link to={`:${movie.id}`}>{movie.title}</Link>\n                  </li>\n                ))}\n              </ul>\n            </>\n          )}\n        </div>\n      )}\n    </main>\n  );\n};\n\nMovies.propTypes = {\n  query: PropTypes.string,\n  handleSubmit: PropTypes.func,\n  getMovieById: PropTypes.func,\n  moviesByTerm: PropTypes.arrayOf(PropTypes.objectOf),\n};\nexport default Movies;\n"],"names":["Movies","handleSubmit","moviesByTerm","getMovieById","query","className","css","onSubmit","type","name","autoComplete","placeholder","length","map","movie","onClick","id","to","title"],"sourceRoot":""}